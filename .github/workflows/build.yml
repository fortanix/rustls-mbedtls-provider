name: rustls-mbedcrypto-provider

permissions:
  contents: read

on:
  push:
    paths-ignore:
      - '*.md'
      - 'LICENSE-APACHE'
      - 'LICENSE-GPL'
    branches:
      - master
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE-APACHE'
      - 'LICENSE-GPL'
    branches:
      - master
  merge_group:
  schedule:
    - cron: '0 18 * * *'

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10

jobs:
  build:
    name: Build+test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # test a bunch of toolchains on ubuntu
        rust:
          - stable
          - beta
          - nightly
        os: [ubuntu-20.04]
        # but only stable on macos/windows (slower platforms)
        include:
          - os: macos-latest
            rust: stable
          - os: windows-latest
            rust: stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: cargo build (debug; default features)
        run: cargo build --locked
        shell: bash

      - name: cargo test (debug; all features)
        run: cargo test --locked --all-features
        shell: bash
        env:
          RUST_BACKTRACE: 1

  msrv:
    name: MSRV
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.61"

      - run: cargo check --locked --lib --all-features -p rustls-mbedcrypto-provider

  features:
    name: Features
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: cargo build (debug; default features)
        run: cargo build --locked

      - name: cargo test (debug; default features)
        run: cargo test --locked
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; no default features)
        run: cargo test --locked --no-default-features

      - name: cargo test (debug; no default features; tls12)
        run: cargo test --locked --no-default-features --features tls12

      - name: cargo test (debug; no default features; tls12, rdrand)
        run: cargo test --locked --no-default-features --features tls12,rdrand

      - name: cargo test (release; no run)
        run: cargo test --locked --release --no-run

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check


