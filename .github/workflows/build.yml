name: rustls-mbedcrypto-provider

permissions:
  contents: read

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
    branches:
      - master
  merge_group:
  schedule:
    - cron: '30 13 * * 1,5'

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_RETRY: 10

jobs:
  build:
    name: Build+test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # test a bunch of toolchains on ubuntu
        rust:
          - stable
          - beta
          - nightly
        os: [ubuntu-20.04]
        # but only stable on macos/windows (slower platforms)
        include:
          - os: macos-latest
            rust: stable
          - os: windows-latest
            rust: stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust }}-${{ matrix.os }}

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: cargo build (debug; default features)
        run: cargo build --locked
        shell: bash

      - name: cargo test (debug; all features)
        run: cargo test --locked --all-features
        shell: bash
        env:
          RUST_BACKTRACE: 1

  features:
    name: Features
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: cargo build (debug; default features)
        run: cargo build --locked

      - name: cargo test (debug; default features)
        run: cargo test --locked
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; no default features)
        run: cargo test --locked --no-default-features

      - name: cargo test (rustls_mbedcrypto_provider; debug; no default features; tls12)
        run: cargo test --locked --no-default-features --features tls12 --package rustls-mbedcrypto-provider

      - name: cargo test (rustls_mbedcrypto_provider; debug; no default features; tls12, rdrand)
        run: cargo test --locked --no-default-features --features tls12,rdrand --package rustls-mbedcrypto-provider

      - name: cargo test (release; no run)
        run: cargo test --locked --release --no-run

# TODO: add fuzz tests
# TODO: add benchmarks

  docs:
    name: Check for documentation errors
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: cargo doc (all packages; all features)
        run: cargo doc --locked --all-features --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: -Dwarnings

  coverage:
    name: Measure coverage
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Measure coverage
        run: ./admin/coverage --lcov --output-path final.info

      - name: Report to codecov.io
        uses: codecov/codecov-action@v3
        with:
          file: final.info
          fail_ci_if_error: false

  # TODO: enable this after crate is published
  # semver:
  #   name: Check semver compatibility
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v4
  #       with:
  #         persist-credentials: false

  #     - name: Check semver
  #       uses: obi1kenobi/cargo-semver-checks-action@v2

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --locked --package rustls-mbedcrypto-provider --all-features --all-targets -- --deny warnings
      - run: cargo clippy --locked --package rustls-mbedcrypto-provider --no-default-features --all-targets -- --deny warnings

  clippy-nightly:
    name: Clippy (Nightly)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: cargo clippy --locked --package rustls-mbedcrypto-provider --all-features --all-targets
      - run: cargo clippy --locked --package rustls-mbedcrypto-provider --no-default-features --all-targets